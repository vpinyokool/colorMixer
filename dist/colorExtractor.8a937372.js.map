{"version":3,"sources":["colorExtractor.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","getImagePixels","_x","_getImagePixels","_callee","input","_callee$","_context","reject","processImage","img","canvas","document","createElement","ctx","getContext","width","height","drawImage","imageData","getImageData","data","error","message","HTMLImageElement","onload","onerror","Image","crossOrigin","src","getImageColorHistogram","pixels","histogram","Array","fill","colorCount","getImageDominantColor","_x2","_getImageDominantColor","_callee2","_getImageColorHistogr","dominantColor","channel","median","count","colorValue","_callee2$","_context2","Math","floor","t0","console","rgbToHex","rgb","map","x","hex","toString","join"],"mappings":"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","file":"colorExtractor.8a937372.js","sourceRoot":"..","sourcesContent":["// Function to get RGB values from an Image object or URL\nasync function getImagePixels(input) {\n    return new Promise((resolve, reject) => {\n        const processImage = (img) => {\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            canvas.width = img.width;\n            canvas.height = img.height;\n\n            // Draw image and get pixel data\n            ctx.drawImage(img, 0, 0);\n            try {\n                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n                resolve(imageData.data);\n            } catch (error) {\n                reject(new Error('Error getting image data: ' + error.message));\n            }\n        };\n\n        if (input instanceof HTMLImageElement) {\n            if (input.complete) {\n                processImage(input);\n            } else {\n                input.onload = () => processImage(input);\n                input.onerror = (error) => reject(new Error('Error loading image: ' + error));\n            }\n        } else {\n            // Assume input is URL string\n            const img = new Image();\n            img.crossOrigin = \"anonymous\";\n            img.onload = () => processImage(img);\n            img.onerror = (error) => reject(new Error('Error loading image: ' + error));\n            img.src = input;\n        }\n    });\n}\n\n// Function to get color histogram from RGB pixels\nfunction getImageColorHistogram(pixels) {\n    // Initialize histogram arrays for R, G, B channels\n    const histogram = [\n        new Array(256).fill(0),  // R channel\n        new Array(256).fill(0),  // G channel\n        new Array(256).fill(0)   // B channel\n    ];\n\n    const colorCount = [0, 0, 0];  // Count for each channel\n\n    // Process each pixel (RGB values are in groups of 4 due to RGBA format)\n    for (let i = 0; i < pixels.length; i += 4) {\n        // R channel\n        histogram[0][pixels[i]]++;\n        colorCount[0]++;\n\n        // G channel\n        histogram[1][pixels[i + 1]]++;\n        colorCount[1]++;\n\n        // B channel\n        histogram[2][pixels[i + 2]]++;\n        colorCount[2]++;\n    }\n\n    return { histogram, colorCount };\n}\n\n// Function to get dominant color using median calculation\nasync function getImageDominantColor(input) {\n    try {\n        const pixels = await getImagePixels(input);\n        const { histogram, colorCount } = getImageColorHistogram(pixels);\n        const dominantColor = [];\n\n        // Calculate median for each channel (R, G, B)\n        for (let channel = 0; channel < 3; channel++) {\n            const median = Math.floor(colorCount[channel] / 2);\n            let count = 0;\n\n            // Find the color value where count exceeds median\n            for (let colorValue = 0; colorValue < 256; colorValue++) {\n                count += histogram[channel][colorValue];\n                if (count > median) {\n                    dominantColor.push(colorValue);\n                    break;\n                }\n            }\n        }\n\n        return dominantColor;\n    } catch (error) {\n        console.error('Error getting dominant color:', error);\n        throw error;\n    }\n}\n\n// Helper function to convert RGB array to hex color\nfunction rgbToHex(rgb) {\n    return '#' + rgb.map(x => {\n        const hex = x.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    }).join('');\n}\n\n// Example usage:\n// getImageDominantColor('https://example.com/image.jpg')\n//     .then(dominantColor => {\n//         console.log('Dominant RGB:', dominantColor);\n//         console.log('Dominant Hex:', rgbToHex(dominantColor));\n//     })\n//     .catch(error => console.error(error));\n\nexport { getImageDominantColor, rgbToHex };"]}